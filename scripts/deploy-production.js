#!/usr/bin/env node

/**
 * EAGLE PASS PRODUCTION DEPLOYMENT SCRIPT (Vercel)
 * 
 * This script deploys Eagle Pass to the production environment via Vercel
 * 
 * Usage: node scripts/deploy-production.js
 * 
 * ‚ö†Ô∏è  WARNING: This deploys to PRODUCTION. Make sure you're ready!
 */

const { execSync } = require('child_process');

// Configuration
const PRODUCTION_PROJECT = 'eaglepass-prod';
const PRODUCTION_ENVIRONMENT = 'production';

console.log('üöÄ Starting Eagle Pass PRODUCTION Deployment (Vercel)...');
console.log(`üìã Target Project: ${PRODUCTION_PROJECT}`);
console.log(`üåç Environment: ${PRODUCTION_ENVIRONMENT}`);
console.log(`üèóÔ∏è  Hosting: Vercel`);
console.log(`üóÑÔ∏è  Database: Firebase Firestore`);
console.log('\n‚ö†Ô∏è  WARNING: This will deploy to PRODUCTION!');

// Step 1: Verify prerequisites
console.log('\n1Ô∏è‚É£ Checking prerequisites...');

try {
  // Check if Vercel CLI is installed
  execSync('vercel --version', { stdio: 'pipe' });
  console.log('‚úÖ Vercel CLI is installed');
} catch (error) {
  console.error('‚ùå Vercel CLI is not installed. Please install it first:');
  console.error('   npm install -g vercel');
  process.exit(1);
}

// Check if user is logged in
try {
  execSync('vercel whoami', { stdio: 'pipe' });
  console.log('‚úÖ Vercel CLI is authenticated');
} catch (error) {
  console.error('‚ùå Vercel CLI is not authenticated. Please login:');
  console.error('   vercel login');
  process.exit(1);
}

// Step 2: Build the application
console.log('\n2Ô∏è‚É£ Building application...');
try {
  execSync('npm run build', { stdio: 'inherit' });
  console.log('‚úÖ Build completed successfully');
} catch (error) {
  console.error('‚ùå Build failed');
  process.exit(1);
}

// Step 3: Run full test suite
console.log('\n3Ô∏è‚É£ Running full test suite...');
try {
  execSync('npm run quality:full', { stdio: 'inherit' });
  console.log('‚úÖ All quality checks passed');
} catch (error) {
  console.error('‚ùå Quality checks failed');
  process.exit(1);
}

// Step 4: Deploy Firebase services
console.log('\n4Ô∏è‚É£ Deploying Firebase services...');
try {
  // Switch to production Firebase project
  execSync(`firebase use ${PRODUCTION_PROJECT}`, { stdio: 'inherit' });
  console.log(`‚úÖ Switched to ${PRODUCTION_PROJECT} Firebase project`);
  
  // Deploy Firestore rules
  execSync('firebase deploy --only firestore:rules', { stdio: 'inherit' });
  console.log('‚úÖ Firestore rules deployed successfully');
  
  // Deploy Firestore indexes
  execSync('firebase deploy --only firestore:indexes', { stdio: 'inherit' });
  console.log('‚úÖ Firestore indexes deployed successfully');
  
  // Deploy functions (if any)
  execSync('firebase deploy --only functions', { stdio: 'inherit' });
  console.log('‚úÖ Firebase functions deployed successfully');
  
} catch (error) {
  console.error('‚ùå Firebase deployment failed');
  process.exit(1);
}

// Step 5: Deploy to Vercel
console.log('\n5Ô∏è‚É£ Deploying to Vercel PRODUCTION...');
try {
  // Deploy to Vercel production
  execSync('vercel --prod', { stdio: 'inherit' });
  console.log('‚úÖ Vercel production deployment completed successfully');
  
} catch (error) {
  console.error('‚ùå Vercel production deployment failed');
  process.exit(1);
}

// Step 6: Verify deployment
console.log('\n6Ô∏è‚É£ Verifying production deployment...');
try {
  // Get deployment URL
  const deploymentInfo = execSync('vercel ls', { encoding: 'utf8' });
  console.log('üìã Recent deployments:');
  console.log(deploymentInfo);
  
  console.log('\nüéâ PRODUCTION deployment completed successfully!');
  console.log(`üåê Your production environment is now live on Vercel`);
  console.log(`üóÑÔ∏è  Firebase services are connected to ${PRODUCTION_PROJECT}`);
  console.log('\nüìù Post-deployment checklist:');
  console.log('   1. ‚úÖ Verify all features work correctly');
  console.log('   2. ‚úÖ Test FERPA compliance features');
  console.log('   3. ‚úÖ Verify parent portal access');
  console.log('   4. ‚úÖ Test notification system');
  console.log('   5. ‚úÖ Monitor error logs');
  console.log('   6. ‚úÖ Check performance metrics');
  console.log('   7. ‚úÖ Notify stakeholders');
  console.log('\nüîß Environment Variables:');
  console.log('   Make sure these are set in Vercel dashboard:');
  console.log('   - NEXT_PUBLIC_FIREBASE_API_KEY');
  console.log('   - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN');
  console.log('   - NEXT_PUBLIC_FIREBASE_PROJECT_ID');
  console.log('   - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET');
  console.log('   - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID');
  console.log('   - NEXT_PUBLIC_FIREBASE_APP_ID');
  console.log('   - FIREBASE_PROJECT_ID');
  console.log('   - FIREBASE_CLIENT_EMAIL');
  console.log('   - FIREBASE_PRIVATE_KEY');
  
} catch (error) {
  console.error('‚ùå Verification failed');
  process.exit(1);
}

console.log('\n‚úÖ Production deployment script completed!'); 